{"ast":null,"code":"import _classCallCheck from \"C:/react-js/urban-fitx/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/react-js/urban-fitx/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// do not edit .js files directly - edit src/index.jst\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    }\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a !== a && b !== b;\n};\n\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DEFAULT_ID = \"__googleMapsScriptId\";\n/**\n * The status of the [[Loader]].\n */\nvar LoaderStatus;\n(function (LoaderStatus) {\n  LoaderStatus[LoaderStatus[\"INITIALIZED\"] = 0] = \"INITIALIZED\";\n  LoaderStatus[LoaderStatus[\"LOADING\"] = 1] = \"LOADING\";\n  LoaderStatus[LoaderStatus[\"SUCCESS\"] = 2] = \"SUCCESS\";\n  LoaderStatus[LoaderStatus[\"FAILURE\"] = 3] = \"FAILURE\";\n})(LoaderStatus || (LoaderStatus = {}));\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then((google) => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\nvar Loader = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n   * using this library, instead the defaults are set by the Google Maps\n   * JavaScript API server.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n   * ```\n   */\n  function Loader(_ref) {\n    var apiKey = _ref.apiKey,\n      authReferrerPolicy = _ref.authReferrerPolicy,\n      channel = _ref.channel,\n      client = _ref.client,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? DEFAULT_ID : _ref$id,\n      language = _ref.language,\n      _ref$libraries = _ref.libraries,\n      libraries = _ref$libraries === void 0 ? [] : _ref$libraries,\n      mapIds = _ref.mapIds,\n      nonce = _ref.nonce,\n      region = _ref.region,\n      _ref$retries = _ref.retries,\n      retries = _ref$retries === void 0 ? 3 : _ref$retries,\n      _ref$url = _ref.url,\n      url = _ref$url === void 0 ? \"https://maps.googleapis.com/maps/api/js\" : _ref$url,\n      version = _ref.version;\n    _classCallCheck(this, Loader);\n    this.CALLBACK = \"__googleMapsCallback\";\n    this.callbacks = [];\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.apiKey = apiKey;\n    this.authReferrerPolicy = authReferrerPolicy;\n    this.channel = channel;\n    this.client = client;\n    this.id = id || DEFAULT_ID; // Do not allow empty string\n    this.language = language;\n    this.libraries = libraries;\n    this.mapIds = mapIds;\n    this.nonce = nonce;\n    this.region = region;\n    this.retries = retries;\n    this.url = url;\n    this.version = version;\n    if (Loader.instance) {\n      if (!fastDeepEqual(this.options, Loader.instance.options)) {\n        throw new Error(\"Loader must not be called again with different options. \".concat(JSON.stringify(this.options), \" !== \").concat(JSON.stringify(Loader.instance.options)));\n      }\n      return Loader.instance;\n    }\n    Loader.instance = this;\n  }\n  _createClass(Loader, [{\n    key: \"options\",\n    get: function get() {\n      return {\n        version: this.version,\n        apiKey: this.apiKey,\n        channel: this.channel,\n        client: this.client,\n        id: this.id,\n        libraries: this.libraries,\n        language: this.language,\n        region: this.region,\n        mapIds: this.mapIds,\n        nonce: this.nonce,\n        url: this.url,\n        authReferrerPolicy: this.authReferrerPolicy\n      };\n    }\n  }, {\n    key: \"status\",\n    get: function get() {\n      if (this.errors.length) {\n        return LoaderStatus.FAILURE;\n      }\n      if (this.done) {\n        return LoaderStatus.SUCCESS;\n      }\n      if (this.loading) {\n        return LoaderStatus.LOADING;\n      }\n      return LoaderStatus.INITIALIZED;\n    }\n  }, {\n    key: \"failed\",\n    get: function get() {\n      return this.done && !this.loading && this.errors.length >= this.retries + 1;\n    }\n    /**\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n     *\n     * @ignore\n     */\n  }, {\n    key: \"createUrl\",\n    value: function createUrl() {\n      var url = this.url;\n      url += \"?callback=\".concat(this.CALLBACK);\n      if (this.apiKey) {\n        url += \"&key=\".concat(this.apiKey);\n      }\n      if (this.channel) {\n        url += \"&channel=\".concat(this.channel);\n      }\n      if (this.client) {\n        url += \"&client=\".concat(this.client);\n      }\n      if (this.libraries.length > 0) {\n        url += \"&libraries=\".concat(this.libraries.join(\",\"));\n      }\n      if (this.language) {\n        url += \"&language=\".concat(this.language);\n      }\n      if (this.region) {\n        url += \"&region=\".concat(this.region);\n      }\n      if (this.version) {\n        url += \"&v=\".concat(this.version);\n      }\n      if (this.mapIds) {\n        url += \"&map_ids=\".concat(this.mapIds.join(\",\"));\n      }\n      if (this.authReferrerPolicy) {\n        url += \"&auth_referrer_policy=\".concat(this.authReferrerPolicy);\n      }\n      return url;\n    }\n  }, {\n    key: \"deleteScript\",\n    value: function deleteScript() {\n      var script = document.getElementById(this.id);\n      if (script) {\n        script.remove();\n      }\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     */\n  }, {\n    key: \"load\",\n    value: function load() {\n      return this.loadPromise();\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     *\n     * @ignore\n     */\n  }, {\n    key: \"loadPromise\",\n    value: function loadPromise() {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.loadCallback(function (err) {\n          if (!err) {\n            resolve(window.google);\n          } else {\n            reject(err.error);\n          }\n        });\n      });\n    }\n    /**\n     * Load the Google Maps JavaScript API script with a callback.\n     */\n  }, {\n    key: \"loadCallback\",\n    value: function loadCallback(fn) {\n      this.callbacks.push(fn);\n      this.execute();\n    }\n    /**\n     * Set the script on document.\n     */\n  }, {\n    key: \"setScript\",\n    value: function setScript() {\n      if (document.getElementById(this.id)) {\n        // TODO wrap onerror callback for cases where the script was loaded elsewhere\n        this.callback();\n        return;\n      }\n      var url = this.createUrl();\n      var script = document.createElement(\"script\");\n      script.id = this.id;\n      script.type = \"text/javascript\";\n      script.src = url;\n      script.onerror = this.loadErrorCallback.bind(this);\n      script.defer = true;\n      script.async = true;\n      if (this.nonce) {\n        script.nonce = this.nonce;\n      }\n      document.head.appendChild(script);\n    }\n    /**\n     * Reset the loader state.\n     */\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.deleteScript();\n      this.done = false;\n      this.loading = false;\n      this.errors = [];\n      this.onerrorEvent = null;\n    }\n  }, {\n    key: \"resetIfRetryingFailed\",\n    value: function resetIfRetryingFailed() {\n      if (this.failed) {\n        this.reset();\n      }\n    }\n  }, {\n    key: \"loadErrorCallback\",\n    value: function loadErrorCallback(e) {\n      var _this2 = this;\n      this.errors.push(e);\n      if (this.errors.length <= this.retries) {\n        var delay = this.errors.length * Math.pow(2, this.errors.length);\n        console.log(\"Failed to load Google Maps script, retrying in \".concat(delay, \" ms.\"));\n        setTimeout(function () {\n          _this2.deleteScript();\n          _this2.setScript();\n        }, delay);\n      } else {\n        this.onerrorEvent = e;\n        this.callback();\n      }\n    }\n  }, {\n    key: \"setCallback\",\n    value: function setCallback() {\n      window.__googleMapsCallback = this.callback.bind(this);\n    }\n  }, {\n    key: \"callback\",\n    value: function callback() {\n      var _this3 = this;\n      this.done = true;\n      this.loading = false;\n      this.callbacks.forEach(function (cb) {\n        cb(_this3.onerrorEvent);\n      });\n      this.callbacks = [];\n    }\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      this.resetIfRetryingFailed();\n      if (this.done) {\n        this.callback();\n      } else {\n        // short circuit and warn if google.maps is already loaded\n        if (window.google && window.google.maps && window.google.maps.version) {\n          console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" + \"This may result in undesirable behavior as options and script parameters may not match.\");\n          this.callback();\n          return;\n        }\n        if (this.loading) ;else {\n          this.loading = true;\n          this.setCallback();\n          this.setScript();\n        }\n      }\n    }\n  }]);\n  return Loader;\n}();\nexport { DEFAULT_ID, Loader, LoaderStatus };","map":{"version":3,"mappings":"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","names":["equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","DEFAULT_ID","LoaderStatus","Loader","apiKey","authReferrerPolicy","channel","client","id","language","libraries","mapIds","nonce","region","retries","url","version","instance","isEqual","options","Error","JSON","stringify","errors","FAILURE","done","SUCCESS","loading","LOADING","INITIALIZED","CALLBACK","join","script","document","getElementById","remove","loadPromise","Promise","resolve","reject","loadCallback","err","window","google","error","fn","callbacks","push","execute","callback","createUrl","createElement","type","src","onerror","loadErrorCallback","bind","defer","async","head","appendChild","deleteScript","onerrorEvent","failed","reset","e","delay","Math","console","log","setTimeout","setScript","__googleMapsCallback","forEach","cb","resetIfRetryingFailed","maps","warn","setCallback"],"sources":["C:\\react-js\\urban-fitx\\node_modules\\@googlemaps\\js-api-loader\\node_modules\\fast-deep-equal\\index.js","C:\\react-js\\urban-fitx\\node_modules\\@googlemaps\\js-api-loader\\src\\index.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport isEqual from \"fast-deep-equal\";\n\n/**\n * @ignore\n */\ndeclare global {\n  interface Window {\n    __googleMapsCallback: (e: Event) => void;\n  }\n}\n\nexport const DEFAULT_ID = \"__googleMapsScriptId\";\n\nexport type Libraries = (\n  | \"drawing\"\n  | \"geometry\"\n  | \"localContext\"\n  | \"places\"\n  | \"visualization\"\n)[];\n\n/**\n * The Google Maps JavaScript API\n * [documentation](https://developers.google.com/maps/documentation/javascript/tutorial)\n * is the authoritative source for [[LoaderOptions]].\n/**\n * Loader options\n */\nexport interface LoaderOptions {\n  /**\n   * See https://developers.google.com/maps/documentation/javascript/get-api-key.\n   */\n  apiKey: string;\n  /**\n   * @deprecated See https://developers.google.com/maps/premium/overview.\n   */\n  channel?: string;\n  /**\n   * @deprecated See https://developers.google.com/maps/premium/overview, use `apiKey` instead.\n   */\n  client?: string;\n  /**\n   * In your application you can specify release channels or version numbers:\n   *\n   * The weekly version is specified with `version=weekly`. This version is\n   * updated once per week, and is the most current.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly'});\n   * ```\n   *\n   * The quarterly version is specified with `version=quarterly`. This version\n   * is updated once per quarter, and is the most predictable.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'quarterly'});\n   * ```\n   *\n   * The version number is specified with `version=n.nn`. You can choose\n   * `version=3.40`, `version=3.39`, or `version=3.38`. Version numbers are\n   * updated once per quarter.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: '3.40'});\n   * ```\n   *\n   * If you do not explicitly specify a version, you will receive the\n   * weekly version by default.\n   */\n  version?: string;\n  /**\n   * The id of the script tag. Before adding a new script, the Loader will check for an existing one.\n   */\n  id?: string;\n  /**\n   * When loading the Maps JavaScript API via the URL you may optionally load\n   * additional libraries through use of the libraries URL parameter. Libraries\n   * are modules of code that provide additional functionality to the main Maps\n   * JavaScript API but are not loaded unless you specifically request them.\n   *\n   * ```\n   * const loader = Loader({\n   *  apiKey,\n   *  libraries: ['drawing', 'geometry', 'places', 'visualization'],\n   * });\n   * ```\n   *\n   * Set the [list of libraries](https://developers.google.com/maps/documentation/javascript/libraries) for more options.\n   */\n  libraries?: Libraries;\n  /**\n   * By default, the Maps JavaScript API uses the user's preferred language\n   * setting as specified in the browser, when displaying textual information\n   * such as the names for controls, copyright notices, driving directions and\n   * labels on maps. In most cases, it's preferable to respect the browser\n   * setting. However, if you want the Maps JavaScript API to ignore the\n   * browser's language setting, you can force it to display information in a\n   * particular language when loading the Maps JavaScript API code.\n   *\n   * For example, the following example localizes the language to Japan:\n   *\n   * ```\n   * const loader = Loader({apiKey, language: 'ja', region: 'JP'});\n   * ```\n   *\n   * See the [list of supported\n   * languages](https://developers.google.com/maps/faq#languagesupport). Note\n   * that new languages are added often, so this list may not be exhaustive.\n   *\n   */\n  language?: string;\n  /**\n   * When you load the Maps JavaScript API from maps.googleapis.com it applies a\n   * default bias for application behavior towards the United States. If you\n   * want to alter your application to serve different map tiles or bias the\n   * application (such as biasing geocoding results towards the region), you can\n   * override this default behavior by adding a region parameter when loading\n   * the Maps JavaScript API code.\n   *\n   * The region parameter accepts Unicode region subtag identifiers which\n   * (generally) have a one-to-one mapping to country code Top-Level Domains\n   * (ccTLDs). Most Unicode region identifiers are identical to ISO 3166-1\n   * codes, with some notable exceptions. For example, Great Britain's ccTLD is\n   * \"uk\" (corresponding to the domain .co.uk) while its region identifier is\n   * \"GB.\"\n   *\n   * For example, the following example localizes the map to the United Kingdom:\n   *\n   * ```\n   * const loader = Loader({apiKey, region: 'GB'});\n   * ```\n   */\n  region?: string;\n  /**\n   * @deprecated Passing `mapIds` is no longer required in the script tag.\n   */\n  mapIds?: string[];\n  /**\n   * Use a custom url and path to load the Google Maps API script.\n   */\n  url?: string;\n  /**\n   * Use a cryptographic nonce attribute.\n   */\n  nonce?: string;\n  /**\n   * The number of script load retries.\n   */\n  retries?: number;\n  /**\n   * Maps JS customers can configure HTTP Referrer Restrictions in the Cloud\n   * Console to limit which URLs are allowed to use a particular API Key. By\n   * default, these restrictions can be configured to allow only certain paths\n   * to use an API Key. If any URL on the same domain or origin may use the API\n   * Key, you can set `auth_referrer_policy=origin` to limit the amount of data\n   * sent when authorizing requests from the Maps JavaScript API. This is\n   * available starting in version 3.46. When this parameter is specified and\n   * HTTP Referrer Restrictions are enabled on Cloud Console, Maps JavaScript\n   * API will only be able to load if there is an HTTP Referrer Restriction that\n   * matches the current website's domain without a path specified.\n   */\n  authReferrerPolicy?: \"origin\";\n}\n\n/**\n * The status of the [[Loader]].\n */\nexport enum LoaderStatus {\n  INITIALIZED,\n  LOADING,\n  SUCCESS,\n  FAILURE,\n}\n\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then((google) => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\nexport class Loader {\n  private static instance: Loader;\n  /**\n   * See [[LoaderOptions.version]]\n   */\n  public readonly version: string;\n  /**\n   * See [[LoaderOptions.apiKey]]\n   */\n  public readonly apiKey: string;\n  /**\n   * See [[LoaderOptions.channel]]\n   */\n  public readonly channel: string;\n  /**\n   * See [[LoaderOptions.client]]\n   */\n  public readonly client: string;\n  /**\n   * See [[LoaderOptions.id]]\n   */\n  public readonly id: string;\n  /**\n   * See [[LoaderOptions.libraries]]\n   */\n  public readonly libraries: Libraries;\n  /**\n   * See [[LoaderOptions.language]]\n   */\n  public readonly language: string;\n\n  /**\n   * See [[LoaderOptions.region]]\n   */\n  public readonly region: string;\n\n  /**\n   * See [[LoaderOptions.mapIds]]\n   */\n  public readonly mapIds: string[];\n\n  /**\n   * See [[LoaderOptions.nonce]]\n   */\n  public readonly nonce: string | null;\n\n  /**\n   * See [[LoaderOptions.retries]]\n   */\n  public readonly retries: number;\n\n  /**\n   * See [[LoaderOptions.url]]\n   */\n  public readonly url: string;\n  /**\n   * See [[LoaderOptions.authReferrerPolicy]]\n   */\n  public readonly authReferrerPolicy: \"origin\";\n\n  private CALLBACK = \"__googleMapsCallback\";\n  private callbacks: ((e: ErrorEvent) => void)[] = [];\n  private done = false;\n  private loading = false;\n  private onerrorEvent: ErrorEvent;\n  private errors: ErrorEvent[] = [];\n\n  /**\n   * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n   * using this library, instead the defaults are set by the Google Maps\n   * JavaScript API server.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n   * ```\n   */\n  constructor({\n    apiKey,\n    authReferrerPolicy,\n    channel,\n    client,\n    id = DEFAULT_ID,\n    language,\n    libraries = [],\n    mapIds,\n    nonce,\n    region,\n    retries = 3,\n    url = \"https://maps.googleapis.com/maps/api/js\",\n    version,\n  }: LoaderOptions) {\n    this.apiKey = apiKey;\n    this.authReferrerPolicy = authReferrerPolicy;\n    this.channel = channel;\n    this.client = client;\n    this.id = id || DEFAULT_ID; // Do not allow empty string\n    this.language = language;\n    this.libraries = libraries;\n    this.mapIds = mapIds;\n    this.nonce = nonce;\n    this.region = region;\n    this.retries = retries;\n    this.url = url;\n    this.version = version;\n\n    if (Loader.instance) {\n      if (!isEqual(this.options, Loader.instance.options)) {\n        throw new Error(\n          `Loader must not be called again with different options. ${JSON.stringify(\n            this.options\n          )} !== ${JSON.stringify(Loader.instance.options)}`\n        );\n      }\n\n      return Loader.instance;\n    }\n\n    Loader.instance = this;\n  }\n\n  public get options(): LoaderOptions {\n    return {\n      version: this.version,\n      apiKey: this.apiKey,\n      channel: this.channel,\n      client: this.client,\n      id: this.id,\n      libraries: this.libraries,\n      language: this.language,\n      region: this.region,\n      mapIds: this.mapIds,\n      nonce: this.nonce,\n      url: this.url,\n      authReferrerPolicy: this.authReferrerPolicy,\n    };\n  }\n\n  public get status(): LoaderStatus {\n    if (this.errors.length) {\n      return LoaderStatus.FAILURE;\n    }\n    if (this.done) {\n      return LoaderStatus.SUCCESS;\n    }\n    if (this.loading) {\n      return LoaderStatus.LOADING;\n    }\n    return LoaderStatus.INITIALIZED;\n  }\n\n  private get failed(): boolean {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1;\n  }\n\n  /**\n   * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n   *\n   * @ignore\n   */\n  public createUrl(): string {\n    let url = this.url;\n\n    url += `?callback=${this.CALLBACK}`;\n\n    if (this.apiKey) {\n      url += `&key=${this.apiKey}`;\n    }\n\n    if (this.channel) {\n      url += `&channel=${this.channel}`;\n    }\n\n    if (this.client) {\n      url += `&client=${this.client}`;\n    }\n\n    if (this.libraries.length > 0) {\n      url += `&libraries=${this.libraries.join(\",\")}`;\n    }\n\n    if (this.language) {\n      url += `&language=${this.language}`;\n    }\n\n    if (this.region) {\n      url += `&region=${this.region}`;\n    }\n\n    if (this.version) {\n      url += `&v=${this.version}`;\n    }\n\n    if (this.mapIds) {\n      url += `&map_ids=${this.mapIds.join(\",\")}`;\n    }\n\n    if (this.authReferrerPolicy) {\n      url += `&auth_referrer_policy=${this.authReferrerPolicy}`;\n    }\n\n    return url;\n  }\n\n  public deleteScript(): void {\n    const script = document.getElementById(this.id);\n    if (script) {\n      script.remove();\n    }\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   */\n  public load(): Promise<typeof google> {\n    return this.loadPromise();\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   *\n   * @ignore\n   */\n  public loadPromise(): Promise<typeof google> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err: ErrorEvent) => {\n        if (!err) {\n          resolve(window.google);\n        } else {\n          reject(err.error);\n        }\n      });\n    });\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script with a callback.\n   */\n  public loadCallback(fn: (e: ErrorEvent) => void): void {\n    this.callbacks.push(fn);\n    this.execute();\n  }\n\n  /**\n   * Set the script on document.\n   */\n  private setScript(): void {\n    if (document.getElementById(this.id)) {\n      // TODO wrap onerror callback for cases where the script was loaded elsewhere\n      this.callback();\n      return;\n    }\n\n    const url = this.createUrl();\n    const script = document.createElement(\"script\");\n    script.id = this.id;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.onerror = this.loadErrorCallback.bind(this);\n    script.defer = true;\n    script.async = true;\n\n    if (this.nonce) {\n      script.nonce = this.nonce;\n    }\n\n    document.head.appendChild(script);\n  }\n\n  /**\n   * Reset the loader state.\n   */\n  private reset(): void {\n    this.deleteScript();\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.onerrorEvent = null;\n  }\n\n  private resetIfRetryingFailed(): void {\n    if (this.failed) {\n      this.reset();\n    }\n  }\n\n  private loadErrorCallback(e: ErrorEvent): void {\n    this.errors.push(e);\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * 2 ** this.errors.length;\n\n      console.log(\n        `Failed to load Google Maps script, retrying in ${delay} ms.`\n      );\n\n      setTimeout(() => {\n        this.deleteScript();\n        this.setScript();\n      }, delay);\n    } else {\n      this.onerrorEvent = e;\n      this.callback();\n    }\n  }\n\n  private setCallback(): void {\n    window.__googleMapsCallback = this.callback.bind(this);\n  }\n\n  private callback(): void {\n    this.done = true;\n    this.loading = false;\n\n    this.callbacks.forEach((cb) => {\n      cb(this.onerrorEvent);\n    });\n\n    this.callbacks = [];\n  }\n\n  private execute(): void {\n    this.resetIfRetryingFailed();\n\n    if (this.done) {\n      this.callback();\n    } else {\n      // short circuit and warn if google.maps is already loaded\n      if (window.google && window.google.maps && window.google.maps.version) {\n        console.warn(\n          \"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\n            \"This may result in undesirable behavior as options and script parameters may not match.\"\n        );\n        this.callback();\n        return;\n      }\n\n      if (this.loading) {\n        // do nothing but wait\n      } else {\n        this.loading = true;\n        this.setCallback();\n        this.setScript();\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}